name: Argo Examples

on:
  pull_request:
    branches:
      - main
    paths: "tests/examples/argo/**"

jobs:
  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.6
      - uses: Gr1N/setup-poetry@v4
        with:
          poetry-version: 1.1.5
      - name: Install Kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl
          chmod +x kubectl
          mv kubectl /usr/local/bin/
          kubectl version
      - name: Install argo CLI
        run: |
          curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.1.6/argo-linux-amd64.gz
          gunzip argo-linux-amd64.gz
          chmod +x argo-linux-amd64
          mkdir -p bin
          mv ./argo-linux-amd64 bin/argo
          bin/argo version
      - name: Install k3d
        run: |
          wget -q -O - https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v4.4.4 bash
      - name: Install Argo on k3d
        run: |
          make set-up-argo
      - name: Package examples in Docker container and push to local registry
        run: |
          make docker-push-local
      - name: Run all examples with Argo and expect them to work
        run: |
          echo "Verifying whether Argo is running correctly"
          kubectl get pods -n $(KUBE_NAMESPACE)

          EXAMPLES_DIR=tests/examples/argo/
          ls -l $EXAMPLES_DIR
          for f in $EXAMPLES_DIR/*.yaml; do
            echo "Submitting $f for execution on Argo"
            bin/argo submit -n argo --wait $f
          done
