[tool.poetry]
name = "py-dagger"
packages = [{ include = "dagger" }]
description = "Define sophisticated data pipelines with Python and run them on different distributed systems (such as Argo Workflows)."
authors = ["larribas <lorenzo.s.arribas@gmail.com>"]
version = "0.0.0"
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/larribas/dagger"
documentation = "https://dagger.readthedocs.io"
keywords = [
  "argo-workflows",
  "data-engineering",
  "data-pipelines",
  "data-science"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Build Tools"
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
black = "^20.8b1"
pre-commit = "^2.11.1"
isort = "^5.7.0"
deepdiff = "^5.2.3"
flake8 = "^3.9.2"
pydocstyle = "^6.1.1"
mypy = "^0.812"
pytest-cov = "^2.12.0"
PyYAML = "^5.4.1"
mkdocs = "^1.2.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pydocstyle]
inherit = false
convention = "numpy"

[tool.poetry.scripts]
hello-world = "examples.hello_world:run_from_cli"
passing-parameters = "examples.passing_parameters:run_from_cli"
map-reduce = "examples.map_reduce:run_from_cli"
nested-map-reduce = "examples.nested_map_reduce:run_from_cli"
composite-map-reduce = "examples.composite_map_reduce:run_from_cli"
nested-dags = "examples.nested_dags:run_from_cli"
argo-specific-extras = "examples.argo_specific_extras:run_from_cli"
