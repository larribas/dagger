"""
Compile DAGs into manifests that will run on top of [Argo Workflows](https://argoproj.github.io/projects/argo).

This runtime produces Python mappings (dictionaries) that contain all the necessary Kubernetes resources for Argo Workflows to execute the supplied DAG.

Please note that you will need to take the manifests generated by this runtime and:
    - Turn them into json/yaml files.
    - Apply them in Kubernetes.

When the manifests are applied in a Kubernetes cluster with a compatible Argo installation, Argo will attempt to run the DAG.

Each of the tasks will run:
    - On top of the container image you specified.
    - Using the container entrypoint you specified.
    - Assuming the container image and entrypoint expose a command-line interface compatible with runtime.cli and the same DAG the manifest was generated from.

We provide examples and tutorials in the project's documentation.
"""

from dagger.runtime.argo.cron_workflow_spec import Cron, CronConcurrencyPolicy  # noqa
from dagger.runtime.argo.metadata import Metadata  # noqa
from dagger.runtime.argo.v1alpha1 import (  # noqa
    cluster_workflow_template_manifest,
    cron_workflow_manifest,
    workflow_manifest,
    workflow_template_manifest,
)
from dagger.runtime.argo.workflow_spec import Workflow  # noqa
